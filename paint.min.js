// as of 2021-10-22, minify with https://minify.js.org/js/ which does NOT require changing "const" to "var" :)
const points=[];var totalLength=0;const dCanvas=document.getElementById("dc"),dContext=dCanvas.getContext("2d");var mouseDrag=!1,mouseDragX=0,mouseDragY=0,pinch=!1,pinchStartDist=0,historyParams={},replaceStateTimeout=null,historyTimeout=null,resizeTimeout=null,helpVisible=!1,menuVisible=!1;const sequences=[{name:"Primes-1-Step-90-turn",desc:"Move 1 step forward per integer, but for primes, turn 90 degrees clockwise before moving.",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>1e6&&(historyParams.n=1e6);const o=historyParams;var s=getPoint(0,0);e.direction=0;for(var r=1;r<o.n;r+=1)isPrime(r)&&(t.push(s),e.direction=e.changeDirection(e.direction)),s=e.computeNextPoint(e.direction,r,s.x,s.y),n+=1;return t.push(s),{points:t,length:n}},forcedDefaults:{v:1,n:6e4,scale:1.2,offsetX:.2,offsetY:-.3},privContext:{direction:0,changeDirection:function(e){return changeDirectionDegrees(e,90)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,1,n,o)}}},{name:"Primes-1-Step-45-turn",desc:"Move 1 step forward per integer, but for primes, turn 45 degrees clockwise before moving.  When moving diagonally, we move 1 step on both the x and y axes, so we're actually moving ~1.414 steps diagonally.",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>1e6&&(historyParams.n=1e6);const o=historyParams;var s=getPoint(0,0);e.direction=315;for(var r=1;r<o.n;r+=1)isPrime(r)&&(t.push(s),e.direction=e.changeDirection(e.direction)),s=e.computeNextPoint(e.direction,r,s.x,s.y),n+=1;return t.push(s),{points:t,length:n}},forcedDefaults:{v:1,n:6e4,scale:.85,offsetX:-.07,offsetY:-.32},privContext:{direction:0,changeDirection:function(e){return changeDirectionDegrees(e,45)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,1,n,o)}}},{name:"Squares-1-Step-90-turn",desc:"Move 1 step forward per integer, but for perfect squares, turn 90 degrees clockwise before moving.",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>1e6&&(historyParams.n=1e6);const o=historyParams;var s=getPoint(0,0);e.direction=270;for(var r=1;r<o.n;r+=1)e.isSquare(r)&&(t.push(s),e.direction=e.changeDirection(e.direction)),s=e.computeNextPoint(e.direction,r,s.x,s.y),n+=1;return t.push(s),{points:t,length:n}},forcedDefaults:{v:1,n:5e3,scale:6.5,offsetX:0,offsetY:0},privContext:{direction:0,changeDirection:function(e){return changeDirectionDegrees(e,90)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,1,n,o)},isSquare:function(e){const t=Math.sqrt(e);return t==Math.trunc(t)}}},{name:"Squares-1-Step-45-turn",desc:"Move 1 step forward per integer, but for perfect squares, turn 45 degrees clockwise before moving.  When moving diagonally, we move 1 step on both the x and y axes, so we're actually moving ~1.414 steps diagonally.",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>1e6&&(historyParams.n=1e6);const o=historyParams;var s=getPoint(0,0);e.direction=270;for(var r=1;r<o.n;r+=1)e.isSquare(r)&&(t.push(s),e.direction=e.changeDirection(e.direction)),s=e.computeNextPoint(e.direction,r,s.x,s.y),n+=1;return t.push(s),{points:t,length:n}},forcedDefaults:{v:1,n:5e3,scale:2.3,offsetX:0,offsetY:0},privContext:{direction:0,changeDirection:function(e){return changeDirectionDegrees(e,45)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,1,n,o)},isSquare:function(e){const t=Math.sqrt(e);return t==Math.trunc(t)}}},{name:"Primes-X-Y-neg-mod-3",desc:"Where each plotted point <code>(x,y)</code> consists of the primes, in order.  Those points are (2,-3), (5,7), (11,13), and so on.<br/><br/>Then we take the sum of the digits of both the <code>x</code> and <code>y</code> of each point.<br/>If that sum, mod 3, is 1, the <code>x</code> is negated.<br/>If that sum, mod 3, is 2, the <code>y</code> is negated.<br/><br/>After applying the negation rule, the first three plotted points become:<br/><code>(2,-3) → sum digits = 5&nbsp;&nbsp;mod 3 = 2 → -y → (2,-3)</code><br/><code>(5,7)&nbsp;&nbsp;→ sum digits = 12 mod 3 = 0 →&nbsp;&nbsp;&nbsp;&nbsp;→ (5,7)</code><br/><code>(11,13)→ sum digits = 6&nbsp;&nbsp;mod 3 = 0 →&nbsp;&nbsp;&nbsp;&nbsp;→ (11,13)</code>",computePointsAndLength:function(e){var t=[],n=0;historyParams.n>1e6&&(historyParams.n=1e6);const o=historyParams;var s=-1,r=getPoint(0,0);t.push(r);for(var a=1;a<o.n;a+=1)if(isPrime(a))if(-1==s)s=a;else{var i=a;const e=(s.toString()+i.toString()).split("");for(var c=0,u=0;u<e.length;u++)c+=e[u];const o=c%3;1==o?s*=-1:2==o&&(i*=-1);const d=getPoint(parseFloat(s),parseFloat(i));n+=Math.hypot(d.x-r.x,d.y-r.y),t.push(d),s=-1,r=d}return{points:t,length:n}},forcedDefaults:{v:1,n:5e3,scale:.08,offsetX:0,offsetY:0},privContext:{}},{name:"Trapped-Knight",desc:"On a chessboard, where the squares are numbered in a spiral, find the squares a knight can jump to in sequence where the smallest-numbered square must always be taken.  Previously-visited squares cannot be returned to again.  After more than 2,000 jumps the knight has no valid squares to jump to, so the sequence ends.<br/><br/>Credit to The Online Encyclopedia of Integer Sequences:<br/><a target='_blank' href='https://oeis.org/A316667'>https://oeis.org/A316667</a><br/>and to Numberphile:<br/><a target='_blank' href='https://www.youtube.com/watch?v=RGQe8waGJ4w'>https://www.youtube.com/watch?v=RGQe8waGJ4w</a>",computePointsAndLength:function(e){var t=[],n=0;e.visitedSquares={};const o=historyParams;var s=getPoint(0,0);if(!e.isNumberedSquare(e,s)){var r=s;e.trackNumberedSquare(e,0,s);for(var a=0,i=90,c=1;c<3562;c+=1)a=e.changeDirection(i),r=e.computeNextPoint(a,1,s.x,s.y),e.isNumberedSquare(e,r)?s=e.computeNextPoint(i,1,s.x,s.y):(i=a,s=r),e.trackNumberedSquare(e,c,s)}var u=getPoint(0,0);t.push(u),e.visitSquare(e,0,u);var d=[],l=-1,m=null;for(c=0;c<o.n;c+=1){d=e.reachableSquares(u);for(var h=0;h<d.length;h++)(-1==l||e.getSquareNumber(e,d[h])<l)&&(e.isVisited(e,d[h])||(m=d[h],l=e.getSquareNumber(e,m)));if(-1==l)break;n+=Math.hypot(m.x-u.x,m.y-u.y),u=m,t.push(u),e.visitSquare(e,l,u),l=-1}return{points:t,length:n}},forcedDefaults:{v:1,n:2016,scale:15,offsetX:0,offsetY:0},privContext:{boardPoints:{},visitedSquares:{},trackNumberedSquare:function(e,t,n){e.boardPoints[n.x+"-"+n.y]=t},isNumberedSquare:function(e,t){return t.x+"-"+t.y in e.boardPoints},getSquareNumber:function(e,t){const n=t.x+"-"+t.y;return!n in e.boardPoints&&console.log("MISSING SQUARE - "+n),e.boardPoints[n]},visitSquare:function(e,t,n){e.visitedSquares[n.x+"-"+n.y]=t},isVisited:function(e,t){return t.x+"-"+t.y in e.visitedSquares},changeDirection:function(e){return changeDirectionDegrees(e,-90)},computeNextPoint:function(e,t,n,o){return computeNextPointDegrees(e,t,n,o)},reachableSquares:function(e){return[getPoint(e.x+1,e.y-2),getPoint(e.x+2,e.y-1),getPoint(e.x+2,e.y+1),getPoint(e.x+1,e.y+2),getPoint(e.x-1,e.y-2),getPoint(e.x-2,e.y-1),getPoint(e.x-2,e.y+1),getPoint(e.x-1,e.y+2)]},isSquare:function(e){const t=Math.sqrt(e);return t==Math.trunc(t)}}}],presets=[{seq:"Primes-1-Step-90-turn",v:1,n:6e4,lineWidth:1,scale:1.35,offsetX:.22,offsetY:-.34,lineColor:"rbgyo",bgColor:"b"},{seq:"Trapped-Knight",v:1,n:2016,lineWidth:1.5,scale:15,offsetX:0,offsetY:0,lineColor:"rbgyo",bgColor:"b"},{seq:"Primes-1-Step-45-turn",v:1,n:32400,lineWidth:2,scale:10.95,offsetX:-.30847,offsetY:-.96171,lineColor:"rbgyo",bgColor:"b"}];for(var menuHtml="<div class='sequence-desc'><b>Presets:</b>",i=0;i<presets.length;i++)menuHtml+="<button style='float:none; margin:0.5rem; width:2.0rem;' class='preset-view-btn' id='preset-view-btn-"+(i+1)+"'>"+(i+1)+"</button>";menuHtml+="</div>";const sequencesByName={};for(i=0;i<sequences.length;i++)sequencesByName[sequences[i].name]=sequences[i],menuHtml+="<div class='sequence-desc'><button class='seq-view-btn' id='seq-view-btn-"+i+"'>View</button><b>"+sequences[i].name+"</b><br/>"+sequences[i].desc+"</div>";document.getElementById("menu-contents").innerHTML=menuHtml;const viewButtons=document.getElementsByClassName("seq-view-btn");var activateSequenceHandler=function(e){var t=parseInt(e.target.id.split("-")[3]);t>=sequences.length&&(t=0);const n=sequences[t].name;if(n!=historyParams.seq){var o=Object.assign(historyParams,sequences[t].forcedDefaults);o.seq=n,replaceHistoryWithParams(o),parseUrlParams(),start(),drawPoints(historyParams)}};for(i=0;i<viewButtons.length;i++)viewButtons[i].addEventListener("click",activateSequenceHandler);function activatePreset(e){replaceHistoryWithParams(e),parseUrlParams(),start()}const presetButtons=document.getElementsByClassName("preset-view-btn");var activatePresetHandler=function(e){var t=parseInt(e.target.id.split("-")[3])-1;(t<0||t>=presets.length)&&(t=0),activatePreset(presets[t])};for(i=0;i<presetButtons.length;i++)presetButtons[i].addEventListener("click",activatePresetHandler);function changeDirectionDegrees(e,t){for(var n=e+t;n<0;)n+=360;for(;n>=360;)n-=360;return n}function computeNextPointDegrees(e,t,n,o){return 0==e?getPoint(n+t,o):45==e?getPoint(n+t,o+t):90==e?getPoint(n,o+t):135==e?getPoint(n-t,o+t):180==e?getPoint(n-t,o):getPoint(225==e?n-t:270==e?n:n+t,o-t)}function isPrime(e){if(e<2)return!1;const t=Math.sqrt(e);for(var n=2;n<=t;n++)if(e%n==0)return!1;return!0}function getPoint(e,t){return{x:e,y:t}}function parseUrlParams(){var e=new URLSearchParams(document.location.search),t={seq:"Primes-1-Step-90-turn",v:1,n:6e4,lineWidth:1,scale:1.35,offsetX:.22,offsetY:-.34,lineColor:"rbgyo",bgColor:"b"};if(e.has("v")&&1==e.get("v")){if(e.has("seq")){const n=e.get("seq");n in sequencesByName?t.seq=n:alert("no such sequence ["+n+"]")}if(e.has("n")&&(t.n=1*parseInt(e.get("n"))),e.has("lineWidth")&&(t.lineWidth=parseFloat(e.get("lineWidth"))),e.has("scale")&&(t.scale=parseFloat(e.get("scale"))),e.has("offsetX")&&(t.offsetX=parseFloat(e.get("offsetX"))),e.has("offsetY")&&(t.offsetY=parseFloat(e.get("offsetY"))),e.has("lineColor")){const n=e.get("lineColor");n in lineColorSchemes?t.lineColor=n:alert("no such line color scheme ["+n+"]")}if(e.has("bgColor")){const n=e.get("bgColor");n in bgColorSchemes?t.bgColor=n:alert("no such background color scheme ["+n+"]")}e.has("lineWidth")&&(t.lineWidth=parseFloat(e.get("lineWidth")),t.lineWidth>20&&(t.lineWidth=20))}console.log(t),historyParams=t}function indicateActiveSequence(){const e=document.getElementsByClassName("seq-view-btn");for(var t=0;t<e.length;t++)sequences[t].name==historyParams.seq?(e[t].innerHTML="Active",e[t].parentNode.classList.add("active-seq")):(e[t].innerHTML="View",e[t].parentNode.classList.remove("active-seq"))}function start(){points.length=0;const e=historyParams;if(!e.seq in sequencesByName)return void console.log("invalid seq parameter: no such sequence ["+e.seq+"]");indicateActiveSequence();const t=sequencesByName[e.seq],n=t.computePointsAndLength(t.privContext);totalLength=n.length;for(var o=0;o<n.points.length;o++)points.push(n.points[o]);setDScaleVars(dContext),drawPoints(e)}var pixelColor=function(e,t,n){return[e.data[4*(width*n+t)],e.data[4*(width*n+t)+1],e.data[4*(width*n+t)+2]]};const bgColorSchemes={b:"#000000",g:"#333333",w:"#FFFFFF"},bgColorSchemeNames=[];for(name in bgColorSchemes)bgColorSchemeNames.push(name);function fillBg(e){var t=e.canvas;historyParams.bgColor in bgColorSchemes?e.fillStyle=bgColorSchemes[historyParams.bgColor]:e.fillStyle="#000000",e.fillRect(0,0,t.width,t.height)}function setDScaleVars(e){var t=e.canvas;t.width==t.offsetWidth&&t.height==t.offsetHeight||(t.width=t.offsetWidth,t.height=t.offsetHeight,fillBg(e))}function replaceHistoryWithParams(e){history.replaceState("",document.title,document.location.pathname+"?"+new URLSearchParams(e).toString()),replaceStateTimeout=null}var replaceHistory=function(){replaceHistoryWithParams(historyParams)},pushToHistory=function(){history.pushState("",document.title,document.location.pathname+"?"+new URLSearchParams(historyParams).toString()),historyTimeout=null};const lineColorSchemes={rby:function(e){if(e<.5){const t=parseInt(2*e*240);return"rgba("+(240-t)+",0,"+t+",1.0)"}{const t=240-parseInt(2*(e-.5)*240);return"rgba("+(240-t)+","+(240-t)+","+t+",1.0)"}},rbgyo:function(e){if(e<.25){const t=parseInt(4*e*240);return"rgba("+(240-t)+",0,"+t+",1.0)"}if(e<.5){const t=parseInt(4*(e-.25)*240);return"rgba(0,"+t+","+(240-t)+",1.0)"}if(e<.75){return"rgba("+(240-(240-parseInt(4*(e-.5)*240)))+",240,0,1.0)"}return"rgba(240,"+(240-parseInt(4*(e-.75)*240)/2)+",0,1.0)"},br:function(e){const t=parseInt(240*e);return"rgba("+t+",0,"+(240-t)+",1.0)"},by:function(e){const t=parseInt(240*e);return"rgba("+t+","+t+","+(240-t)+",1.0)"},op:function(e){const t=parseInt(240*e);return"rgba(240,"+(120-t/2)+","+t+",1.0)"},lgdg:function(e){const t=parseInt(150*e);return"rgba("+(200-t)+","+(200-t)+","+(200-t)+",1.0)"},r:function(e){const t=200-parseInt(30*e);return"rgba("+t+","+.2*t+","+.2*t+",1.0)"},o:function(e){const t=200-parseInt(40*e);return"rgba("+t+","+.5*t+",0,1.0)"},y:function(e){const t=200-parseInt(40*e);return"rgba("+t+","+t+",0,1.0)"},g:function(e){const t=200-parseInt(40*e);return"rgba("+.1*t+","+t+","+.1*t+",1.0)"},b:function(e){const t=200-parseInt(40*e);return"rgba("+.1*t+","+.1*t+","+t+",1.0)"},p:function(e){const t=200-parseInt(40*e);return"rgba("+t+","+.1*t+","+t+",1.0)"},dg:function(e){const t=60-parseInt(20*e);return"rgba("+t+","+t+","+t+",1.0)"},lg:function(e){const t=200-parseInt(40*e);return"rgba("+t+","+t+","+t+",1.0)"}},lineColorSchemeNames=[];for(name in lineColorSchemes)lineColorSchemeNames.push(name);function getLineColor(e,t){return t in lineColorSchemes?lineColorSchemes[t](e):"rgba(200,200,200,1.0)"}function drawPoints(e){null!=replaceStateTimeout&&window.clearTimeout(replaceStateTimeout),replaceStateTimeout=window.setTimeout(replaceHistory,250);const t=dContext.canvas,n=e.lineWidth,o=e.scale,s=t.width*(.5+e.offsetX),r=t.height*(.5+e.offsetY);fillBg(dContext),console.log("drawing ["+points.length+"] points with a total length of ["+totalLength+"]");var a=0,i=totalLength*o,c=1*s,u=1*r,d=0,l=0;dContext.lineWidth=n,dContext.lineCap="round",dContext.lineJoin="round",dContext.beginPath(),dContext.moveTo(s,r);for(var m=0;m<points.length;m++){var h=points[m].x*o+s,f=points[m].y*o+r;m>0&&(l=f-u,a+=0==(d=h-c)?Math.abs(l):0==l?Math.abs(d):Math.hypot(d,l)),dContext.beginPath(),dContext.moveTo(c,u),dContext.strokeStyle=getLineColor(a/i,e.lineColor),dContext.lineTo(h,f),dContext.stroke(),c=h,u=f}}function addParamPercentAndRound(e,t){if(!e in historyParams)console.log("unknown params field ["+e+"]");else{var n=Math.round(100*historyParams[e]);n+=t,historyParams[e]=parseFloat(n/100)}}function roundTo2Decimals(e){var t=Math.round(100*e);return parseFloat(t/100)}function roundTo5Decimals(e){var t=Math.round(1e5*e);return parseFloat(t/1e5)}window.addEventListener("keydown",function(e){if(39==e.keyCode)addParamPercentAndRound("offsetX",-1),drawPoints(historyParams);else if(68==e.keyCode)addParamPercentAndRound("offsetX",-10),drawPoints(historyParams);else if(37==e.keyCode)addParamPercentAndRound("offsetX",1),drawPoints(historyParams);else if(65==e.keyCode)addParamPercentAndRound("offsetX",10),drawPoints(historyParams);else if(38==e.keyCode)addParamPercentAndRound("offsetY",1),drawPoints(historyParams);else if(87==e.keyCode)addParamPercentAndRound("offsetY",10),drawPoints(historyParams);else if(40==e.keyCode)addParamPercentAndRound("offsetY",-1),drawPoints(historyParams);else if(83==e.keyCode)addParamPercentAndRound("offsetY",-10),drawPoints(historyParams);else if(61==e.keyCode||107==e.keyCode)addParamPercentAndRound("scale",1),historyParams.scale>500&&(historyParams.scale=500),drawPoints(historyParams);else if(173==e.keyCode||109==e.keyCode)addParamPercentAndRound("scale",-1),historyParams.scale<.01&&(historyParams.scale=.01),drawPoints(historyParams);else if(69==e.keyCode)addParamPercentAndRound("scale",50),historyParams.scale>500&&(historyParams.scale=500),drawPoints(historyParams);else if(81==e.keyCode)addParamPercentAndRound("scale",-50),historyParams.scale<0&&(historyParams.scale=.01),drawPoints(historyParams);else if(67==e.keyCode)historyParams.offsetX=0,historyParams.offsetY=0,drawPoints(historyParams);else if(77==e.keyCode)historyParams.n+=500,start(),drawPoints(historyParams);else if(78==e.keyCode)historyParams.n>100&&(historyParams.n-=100),start(),drawPoints(historyParams);else if(86==e.keyCode){for(var t=-1,n=0;n<lineColorSchemeNames.length;n++)if(lineColorSchemeNames[n]==historyParams.lineColor){t=n;break}(t+=1)>=lineColorSchemeNames.length&&(t=0),historyParams.lineColor=lineColorSchemeNames[t],drawPoints(historyParams)}else if(66==e.keyCode){for(t=-1,n=0;n<bgColorSchemeNames.length;n++)if(bgColorSchemeNames[n]==historyParams.bgColor){t=n;break}(t+=1)>=bgColorSchemeNames.length&&(t=0),historyParams.bgColor=bgColorSchemeNames[t],drawPoints(historyParams)}else if(88==e.keyCode){var o=-1;for(n=0;n<sequences.length;n++)if(sequences[n].name==historyParams.seq){o=n;break}(o+=1)>=sequences.length&&(o=0),historyParams.seq=sequences[o].name,start()}else 90==e.keyCode?(addParamPercentAndRound("lineWidth",50),historyParams.lineWidth>20&&(historyParams.lineWidth=.5),drawPoints(historyParams)):72==e.keyCode?helpVisible?closeHelpMenu():openHelpMenu():80==e.keyCode?menuVisible?closeMenu():openMenu():49==e.keyCode||97==e.keyCode?activatePreset(presets[0]):50==e.keyCode||98==e.keyCode?activatePreset(presets[1]):51!=e.keyCode&&99!=e.keyCode||activatePreset(presets[2])}),window.addEventListener("resize",function(){null!==resizeTimeout&&window.clearTimeout(resizeTimeout),resizeTimeout=window.setTimeout(function(){setDScaleVars(dContext),drawPoints(historyParams)},500)});var mouseDownHandler=function(e){e.preventDefault(),"touches"in e&&"1"in e.touches&&(pinch=!0,pinchStartDist=Math.hypot(e.touches[0].pageX-e.touches[1].pageX,e.touches[0].pageY-e.touches[1].pageY)),mouseDrag=!0,mouseDragX=e.pageX,mouseDragY=e.pageY};dCanvas.addEventListener("mousedown",mouseDownHandler),dCanvas.addEventListener("touchstart",mouseDownHandler);var mouseMoveHandler=function(e){if(e.preventDefault(),!mouseDrag)return;const t=e.pageX,n=e.pageY,o=(mouseDragX-t)/dCanvas.width,s=(mouseDragY-n)/dCanvas.height;if(historyParams.offsetX=roundTo5Decimals(historyParams.offsetX-o),historyParams.offsetY=roundTo5Decimals(historyParams.offsetY-s),mouseDragX=t,mouseDragY=n,"touches"in e&&"1"in e.touches){const t=(e.touches[0].pageX+e.touches[1].pageX)/2,n=(e.touches[0].pageY+e.touches[1].pageY)/2,o=historyParams.scale,s=Math.hypot(e.touches[0].pageX-e.touches[1].pageX,e.touches[0].pageY-e.touches[1].pageY),r=s/pinchStartDist;pinchStartDist=s;const a=roundTo5Decimals(historyParams.scale*r);historyParams.scale=a<5e-5?5e-5:a>500?500:a;const i=(t-dCanvas.width*(.5+historyParams.offsetX))/o*((o-historyParams.scale)/dCanvas.width)+historyParams.offsetX,c=(n-dCanvas.height*(.5+historyParams.offsetY))/o*((o-historyParams.scale)/dCanvas.height)+historyParams.offsetY;historyParams.offsetX=roundTo5Decimals(i),historyParams.offsetY=roundTo5Decimals(c)}drawPoints(historyParams)};dCanvas.addEventListener("mousemove",mouseMoveHandler),dCanvas.addEventListener("touchmove",mouseMoveHandler);var mouseUpHandler=function(e){e.preventDefault(),mouseDrag=!1,pinch=!1};function closeMenu(){menuVisible=!1,hideFooter(),document.getElementById("menu").style.display="none",document.getElementById("menu-open-wrap").style.display="block"}function openMenu(){menuVisible=!0,closeHelpMenu(),showFooter(),document.getElementById("menu").style.display="block",document.getElementById("menu-open-wrap").style.display="none"}function closeHelpMenu(){helpVisible=!1,hideFooter(),document.getElementById("help-menu").style.display="none",document.getElementById("menu-open-wrap").style.display="block"}function openHelpMenu(){closeMenu(),showFooter(),helpVisible=!0,document.getElementById("help-menu").style.display="block",document.getElementById("menu-open-wrap").style.display="none"}function showFooter(){document.getElementById("footer").style.display="block"}function hideFooter(){document.getElementById("footer").style.display="none"}dCanvas.addEventListener("mouseup",mouseUpHandler),dCanvas.addEventListener("touchend",mouseUpHandler),dCanvas.addEventListener("wheel",function(e){const t=historyParams.scale,n=roundTo5Decimals(historyParams.scale*(1+e.wheelDeltaY/48*.05));historyParams.scale=n<5e-5?5e-5:n>500?500:n;const o=(e.pageX-dCanvas.width*(.5+historyParams.offsetX))/t*((t-historyParams.scale)/dCanvas.width)+historyParams.offsetX,s=(e.pageY-dCanvas.height*(.5+historyParams.offsetY))/t*((t-historyParams.scale)/dCanvas.height)+historyParams.offsetY;historyParams.offsetX=roundTo5Decimals(o),historyParams.offsetY=roundTo5Decimals(s),drawPoints(historyParams)}),document.getElementById("menu-open").addEventListener("click",function(e){openMenu()},!0),document.getElementById("menu-close").addEventListener("click",function(e){closeMenu(),closeHelpMenu()},!0),document.getElementById("help-menu-open").addEventListener("click",function(e){openHelpMenu()},!0),document.getElementById("help-menu-close").addEventListener("click",function(e){closeHelpMenu()},!0),parseUrlParams(),start();